import { Routes } from "../src/rest";

describe("Route tests", () => {
	test("Routes", () => {
		expect(Routes.storages()).toBe("/storages");
		expect(Routes.storage(1)).toBe("/storages/1");
		expect(Routes.languages()).toBe("/languages");
		expect(Routes.language("en")).toBe("/languages/en");
		expect(Routes.project(1)).toBe("/projects/1");
		expect(Routes.projectBranches(1)).toBe("/projects/1/branches");
		expect(Routes.projectBranch(1, 1)).toBe("/projects/1/branches/1");
		expect(Routes.projectDirectories(1)).toBe("/projects/1/directories");
		expect(Routes.projectDirectory(1, 1)).toBe("/projects/1/directories/1");
		expect(Routes.projectFiles(1)).toBe("/projects/1/files");
		expect(Routes.projectFile(1, 1)).toBe("/projects/1/files/1");
		expect(Routes.projectFileDownload(1, 1)).toBe("/projects/1/files/1/download");
		expect(Routes.projectFileRevisions(1, 1)).toBe("/projects/1/files/1/revisions");
		expect(Routes.projectFileRevision(1, 1, 1)).toBe("/projects/1/files/1/revisions/1");
		expect(Routes.projectPreTranslations(1)).toBe("/projects/1/pre-translations");
		expect(Routes.projectPreTranslation(1, "1")).toBe("/projects/1/pre-translations/1");
		expect(Routes.projectTranslationsExports(1)).toBe("/projects/1/translations/exports");
		expect(Routes.projectTranslationUpload(1, "en")).toBe("/projects/1/translations/en");
		expect(Routes.projectTranslationBuilds(1)).toBe("/projects/1/translations/builds");
		expect(Routes.projectTranslationBuild(1, 1)).toBe("/projects/1/translations/builds/1");
		expect(Routes.projectTranslationBuildDownload(1, 1)).toBe("/projects/1/translations/builds/1/download");
		expect(Routes.projectTranslationBuildDirectory(1, 1)).toBe("/projects/1/translations/builds/directories/1");
		expect(Routes.projectTranslationBuildFile(1, 1)).toBe("/projects/1/translations/builds/files/1");
		expect(Routes.projectStrings(1)).toBe("/projects/1/strings");
		expect(Routes.projectString(1, 1)).toBe("/projects/1/strings/1");
		expect(Routes.projectApprovals(1)).toBe("/projects/1/approvals");
		expect(Routes.projectApproval(1, 1)).toBe("/projects/1/approvals/1");
		expect(Routes.projectLanguageTranslations(1, "en")).toBe("/projects/1/languages/en/translations");
		expect(Routes.projectTranslations(1)).toBe("/projects/1/translations");
		expect(Routes.projectTranslation(1, 1)).toBe("/projects/1/translations/1");
		expect(Routes.projectVotes(1)).toBe("/projects/1/votes");
		expect(Routes.projectVote(1, 1)).toBe("/projects/1/votes/1");
		expect(Routes.projectComments(1)).toBe("/projects/1/comments");
		expect(Routes.projectComment(1, 1)).toBe("/projects/1/comments/1");
		expect(Routes.projectScreenshots(1)).toBe("/projects/1/screenshots");
		expect(Routes.projectScreenshot(1, 1)).toBe("/projects/1/screenshots/1");
		expect(Routes.projectScreenshotTags(1, 1)).toBe("/projects/1/screenshots/1/tags");
		expect(Routes.projectScreenshotTag(1, 1, 1)).toBe("/projects/1/screenshots/1/tags/1");
		expect(Routes.glossaries()).toBe("/glossaries");
		expect(Routes.glossary(1)).toBe("/glossaries/1");
		expect(Routes.glossaryExports(1)).toBe("/glossaries/1/exports");
		expect(Routes.glossaryExport(1, 1)).toBe("/glossaries/1/exports/1");
		expect(Routes.glossaryExportDownload(1, 1)).toBe("/glossaries/1/exports/1/download");
		expect(Routes.glossaryImports(1)).toBe("/glossaries/1/imports");
		expect(Routes.glossaryImport(1, 1)).toBe("/glossaries/1/imports/1");
		expect(Routes.glossaryItems(1)).toBe("/glossaries/1/items");
		expect(Routes.glossaryTerms(1)).toBe("/glossaries/1/terms");
		expect(Routes.glossaryTerm(1, 1)).toBe("/glossaries/1/terms/1");
		expect(Routes.translationMemories()).toBe("/tms");
		expect(Routes.translationMemory(1)).toBe("/tms/1");
		expect(Routes.translationMemorySegments(1)).toBe("/tms/1/segments");
		expect(Routes.translationMemoryExports(1)).toBe("/tms/1/exports");
		expect(Routes.translationMemoryExport(1, "1")).toBe("/tms/1/exports/1");
		expect(Routes.translationMemoryExportDownload(1, "1")).toBe("/tms/1/exports/1/download");
		expect(Routes.translationMemoryImports(1)).toBe("/tms/1/imports");
		expect(Routes.translationMemoryImport(1, "1")).toBe("/tms/1/imports/1");
		expect(Routes.machineTranslations()).toBe("/mts");
		expect(Routes.machineTranslation(1)).toBe("/mts/1");
		expect(Routes.machineTranlationTranslations(1)).toBe("/mts/1/translations");
		expect(Routes.projectBranchLanguagesProgress(1, 1)).toBe("/projects/1/branches/1/languages/progress");
		expect(Routes.projectDirectoryLanguagesProgress(1, 1)).toBe("/projects/1/directories/1/languages/progress");
		expect(Routes.projectFileLanguagesProgress(1, 1)).toBe("/projects/1/files/1/languages/progress");
		expect(Routes.projectLanguageProgress(1, "en")).toBe("/projects/1/languages/en/progress");
		expect(Routes.projectQAChecks(1)).toBe("/projects/1/qa-checks");
		expect(Routes.projectReports(1)).toBe("/projects/1/reports");
		expect(Routes.projectReport(1, "1")).toBe("/projects/1/reports/1");
		expect(Routes.projectReportDownload(1, "1")).toBe("/projects/1/reports/1/download");
		expect(Routes.projectTasks(1)).toBe("/projects/1/tasks");
		expect(Routes.projectTaskExports(1, 1)).toBe("/projects/1/tasks/1/exports");
		expect(Routes.projectTask(1, 1)).toBe("/projects/1/tasks/1");
		expect(Routes.userTasks()).toBe("/user/tasks");
		expect(Routes.userTask(1)).toBe("/user/tasks/1");
		expect(Routes.projectIssues(1)).toBe("/projects/1/issues");
		expect(Routes.projectIssue(1, "1")).toBe("/projects/1/issues/1");
		expect(Routes.currentUser()).toBe("/user");
		expect(Routes.projectMembers(1)).toBe("/projects/1/members");
		expect(Routes.projectMember(1, 1)).toBe("/projects/1/members/1");
		expect(Routes.projectWebhooks(1)).toBe("/projects/1/webhooks");
		expect(Routes.projectWebhook(1, 1)).toBe("/projects/1/webhooks/1");
		expect(Routes.projectDictionaries(1)).toBe("/projects/1/dictionaries");
		expect(Routes.projectDictionary(1, "en")).toBe("/projects/1/dictionaries/en");
		expect(Routes.projectDistributions(1)).toBe("/projects/1/distributions");
		expect(Routes.projectDistribution(1, "1")).toBe("/projects/1/distributions/1");
		expect(Routes.projectDistributionRelease(1, "1")).toBe("/projects/1/distributions/1/release");
		expect(Routes.projectLabels(1)).toBe("/projects/1/labels");
		expect(Routes.projectLabel(1, 1)).toBe("/projects/1/labels/1");
		expect(Routes.projectLabelStrings(1, 1)).toBe("/projects/1/labels/1/strings");
	});
});
